var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.334,1,2.099]],["body/controllers/AppController.html",[0,2.143,1,3.371,2,1.711,3,0.316,4,0.269,5,0.269,6,3.462,7,0.468,8,1.829,9,4.965,10,1.579,11,0.03,12,0.639,13,4.132,14,1.46,15,1.339,16,0.396,17,0.986,18,3.022,19,3.462,20,0.316,21,0.254,22,2.691,23,3.462,24,1.46,25,4.132,26,0.024,27,0.024]],["title/modules/AppModule.html",[28,1.448,29,2.099]],["body/modules/AppModule.html",[1,3.292,2,1.843,3,0.251,4,0.214,5,0.214,11,0.03,16,0.466,17,0.783,18,3.124,19,2.748,20,0.251,21,0.202,26,0.02,27,0.02,28,2.001,29,4.13,30,1.604,31,2.178,32,2.748,33,2.748,34,2.748,35,3.434,36,3.434,37,3.434,38,2.616,39,1.927,40,1.927,41,3.28,42,2.9,43,2.9,44,3.28,45,3.28,46,2.398,47,3.28,48,2.136,49,1.474,50,3.28,51,3.28,52,3.28]],["title/injectables/AppService.html",[18,1.723,53,1.334]],["body/injectables/AppService.html",[3,0.332,4,0.283,5,0.283,7,0.491,8,1.885,9,5.051,11,0.03,12,0.671,14,1.533,15,1.38,16,0.332,17,1.036,18,2.852,20,0.332,21,0.266,24,1.533,26,0.024,27,0.024,53,2.209,54,2.549,55,3.635,56,4.338,57,4.338,58,4.338]],["title/classes/CreateProductDto.html",[21,0.198,59,1.448]],["body/classes/CreateProductDto.html",[3,0.133,4,0.113,5,0.113,7,0.197,10,1.929,11,0.03,12,0.781,15,1.38,16,0.133,20,0.133,21,0.171,26,0.013,27,0.013,59,1.249,60,0.415,61,3.804,62,1.271,63,0.841,64,2.041,65,2.262,66,2.262,67,2.262,68,2.262,69,2.262,70,1.699,71,2.262,72,0.781,73,3.636,74,4.472,75,1.739,76,2.563,77,4.722,78,5.052,79,5.052,80,5.337,81,4.229,82,2.781,83,4.34,84,4.472,85,3.901,86,2.033,87,4.472,88,1.739,89,3.901,90,1.739,91,3.474,92,3.474,93,3.325,94,1.739,95,2.474,96,3.474,97,1.739,98,2.781,99,2.781,100,1.739,101,2.33,102,2.33,103,1.739,104,1.739,105,3.474,106,1.739,107,1.739,108,2.781,109,1.739,110,1.739,111,1.739,112,3.383,113,2.901,114,1.271,115,2.901,116,1.457,117,1.133,118,3.969,119,4.34,120,2.911,121,2.781,122,1.739,123,1.739]],["title/classes/CreateSalesDto.html",[21,0.198,124,1.723]],["body/classes/CreateSalesDto.html",[3,0.152,4,0.129,5,0.129,7,0.225,10,2.121,11,0.03,12,0.874,15,1.266,16,0.29,20,0.152,21,0.19,26,0.014,27,0.014,60,0.474,63,0.933,70,1.852,72,0.874,73,1.663,74,4.427,76,2.297,77,3.578,78,3.578,79,3.578,84,3.578,85,3.863,86,2.256,87,4.103,89,4.056,95,3.067,112,2.256,113,4.195,114,1.451,115,3.381,117,1.293,120,1.663,124,1.649,125,4.808,126,1.663,127,2.768,128,2.768,129,2.768,130,2.768,131,2.768,132,2.768,133,2.768,134,3.172,135,2.768,136,2.768,137,3.786,138,3.086,139,1.813,140,1.985,141,2.586,142,1.985,143,4.27,144,1.985,145,4.897,146,1.985,147,1.985,148,1.447,149,3.086,150,1.649,151,1.985,152,1.985,153,1.985,154,1.985,155,1.985,156,1.338,157,1.985,158,1.985,159,1.985,160,4.27,161,4.27,162,1.985,163,3.086,164,3.086,165,1.985,166,1.663,167,1.985,168,1.451,169,1.451,170,1.985,171,1.985,172,1.985]],["title/classes/CreateUserDto.html",[21,0.198,173,1.576]],["body/classes/CreateUserDto.html",[3,0.326,4,0.278,5,0.278,7,0.482,10,1.629,11,0.029,12,0.659,15,1.365,16,0.326,20,0.326,21,0.324,26,0.024,27,0.024,60,1.017,63,1.596,72,0.659,112,3.115,113,3.115,114,3.115,115,4.191,116,3.57,117,2.775,173,2.581,174,4.421,175,3.115,176,2.026,177,4.261]],["title/classes/Product.html",[21,0.198,148,1.232]],["body/classes/Product.html",[3,0.162,4,0.138,5,0.138,7,0.24,10,2.227,11,0.03,12,0.901,15,1.507,16,0.302,20,0.162,21,0.13,26,0.015,27,0.015,60,0.505,63,0.981,64,2.316,65,2.567,66,2.567,67,2.567,68,2.567,69,2.567,70,1.928,71,2.567,72,0.972,93,3.702,95,2.686,102,3.702,141,2.717,148,1.24,156,0.748,166,4.731,169,1.548,178,1.774,179,1.457,180,2.882,181,3.303,182,1.928,183,2.063,184,3.303,185,3.702,186,3.303,187,2.117,188,4.764,189,5.646,190,5.646,191,2.117,192,2.717,193,2.117,194,2.117,195,4.259,196,2.117,197,2.117,198,2.117,199,2.117,200,2.117,201,2.117,202,1.774,203,1.548,204,2.117,205,3.303,206,2.117,207,2.371,208,1.548,209,1.774,210,1.774,211,1.774,212,2.117,213,2.371,214,1.035,215,1.774,216,4.764,217,1.774]],["title/controllers/ProductController.html",[0,1.334,218,2.099]],["body/controllers/ProductController.html",[0,0.905,2,0.905,3,0.167,4,0.143,5,0.143,7,0.247,8,1.174,10,1.847,11,0.03,12,0.747,14,1.707,15,1.316,16,0.344,17,0.522,20,0.167,21,0.134,22,1.423,24,1.707,26,0.015,27,0.015,59,2.508,72,0.622,76,2,148,2.022,150,2.401,176,1.587,182,2.665,218,2.164,219,1.831,220,1.597,221,2.506,222,2.939,223,2.783,224,2.783,225,3.763,226,3.368,227,1.597,228,2.939,229,2.185,230,1.859,231,1.859,232,2.106,233,2.185,234,2.783,235,2.185,236,3.322,237,2.185,238,2.783,239,2.185,240,2.185,241,1.831,242,2.783,243,2.185,244,2.362,245,1.597,246,1.831,247,1.597,248,2.185,249,1.597,250,2.149,251,1.831,252,0.905,253,1.284,254,1.423,255,1.597,256,2.185,257,2.185,258,2.429,259,2.018,260,2.171,261,2.185,262,1.168,263,2.618,264,2.939,265,3.322,266,2.185,267,2.185,268,1.831,269,2.185,270,2.185,271,1.831,272,2.185,273,2.185,274,2.185,275,2.185,276,2.185,277,2.185]],["title/modules/ProductModule.html",[28,1.448,35,1.894]],["body/modules/ProductModule.html",[2,2.049,3,0.295,4,0.251,5,0.251,11,0.03,16,0.457,17,0.919,20,0.295,21,0.236,26,0.023,27,0.023,28,2.224,30,1.882,31,2.42,35,3.592,38,2.907,39,2.261,40,2.261,42,3.223,43,2.506,48,2.506,49,1.729,218,3.562,250,3.268,251,3.224,278,3.224,279,3.224,280,3.849,281,3.849,282,2.057,283,3.224,284,3.849]],["title/classes/ProductRepository.html",[21,0.198,282,1.723]],["body/classes/ProductRepository.html",[3,0.221,4,0.189,5,0.189,7,0.328,8,1.442,11,0.031,12,0.631,14,1.022,16,0.393,17,0.691,20,0.221,21,0.178,24,1.022,26,0.019,27,0.019,59,2.526,60,0.691,63,1.235,64,2.398,65,2.658,66,2.658,67,2.658,68,2.658,69,2.658,70,1.996,71,2.658,72,0.631,139,1.7,148,1.106,150,1.546,176,1.022,179,1.834,214,1.415,221,1.958,222,2.984,227,2.984,230,1.198,231,1.198,232,1.69,252,1.198,253,1.7,259,1.834,260,1.3,262,1.546,282,2.182,285,2.424,286,3.08,287,4.73,288,2.893,289,2.893,290,2.115,291,2.115,292,2.115,293,1.884,294,2.893,295,2.984,296,2.115,297,2.893,298,2.893,299,2.893,300,2.893,301,2.893,302,2.893,303,2.893,304,2.893,305,1.884,306,2.893,307,1.884,308,1.884,309,2.115,310,2.115,311,2.398,312,2.182,313,2.893,314,2.115,315,2.115,316,2.115]],["title/injectables/ProductService.html",[53,1.334,250,1.723]],["body/injectables/ProductService.html",[3,0.133,4,0.114,5,0.114,7,0.197,8,0.984,11,0.031,12,0.717,14,1.535,15,1.347,16,0.355,17,0.416,20,0.133,21,0.107,24,1.404,26,0.013,27,0.013,49,0.783,53,1.153,54,1.024,59,2.269,64,2.552,65,2.829,66,2.829,67,2.829,68,2.829,69,2.829,70,2.124,71,2.829,72,0.672,85,1.274,89,1.274,130,2.543,139,1.024,148,1.77,150,0.931,176,1.535,182,2.378,221,2.394,222,2.036,223,2.333,224,2.333,225,3.329,226,2.914,227,2.036,230,1.798,231,1.798,232,2.091,241,1.46,244,2.334,250,1.488,252,0.721,253,1.636,259,1.952,260,1.952,263,1.135,268,1.46,282,2.476,283,1.46,291,1.274,293,1.813,295,2.543,305,1.135,307,1.135,308,1.135,311,2.334,312,2.123,317,1.46,318,2.036,319,1.742,320,1.742,321,1.742,322,2.785,323,1.742,324,2.785,325,1.742,326,1.742,327,1.742,328,2.036,329,1.742,330,1.274,331,1.742,332,1.274,333,1.742,334,1.742,335,2.333,336,1.742,337,2.914,338,1.742,339,1.742,340,2.333,341,1.742,342,2.785,343,2.785,344,2.785,345,2.785,346,2.785,347,2.785,348,2.785,349,2.785,350,1.742,351,1.742,352,1.742,353,1.742,354,2.785,355,1.742,356,1.742,357,1.742,358,1.742,359,1.46,360,1.742,361,1.742,362,1.742]],["title/classes/ReturnProductDto.html",[21,0.198,254,2.099]],["body/classes/ReturnProductDto.html",[3,0.325,4,0.277,5,0.277,7,0.48,11,0.029,12,0.814,15,1.361,16,0.325,20,0.325,21,0.261,26,0.024,27,0.024,60,1.013,63,1.592,72,0.814,76,2.369,148,2.396,254,3.427,291,3.101,363,4.793,364,3.554,365,4.242,366,4.242]],["title/classes/ReturnSalesDto.html",[21,0.198,367,2.099]],["body/classes/ReturnSalesDto.html",[3,0.32,4,0.273,5,0.273,7,0.474,11,0.029,12,0.807,15,1.35,16,0.32,20,0.32,21,0.257,26,0.024,27,0.024,60,0.999,63,1.579,72,0.807,76,2.354,183,2.469,367,3.399,368,4.765,369,2.726,370,3.507,371,3.507,372,3.06]],["title/classes/ReturnUsersDto.html",[21,0.198,373,1.894]],["body/classes/ReturnUsersDto.html",[3,0.308,4,0.263,5,0.263,7,0.456,11,0.03,12,0.788,15,1.445,16,0.308,20,0.39,21,0.313,26,0.023,27,0.023,60,0.961,63,1.541,72,0.788,76,2.431,156,2.22,369,2.623,370,3.374,371,3.374,373,2.993,374,4.084,375,2.986,376,2.623,377,2.366,378,2.944]],["title/classes/Sales.html",[21,0.198,183,1.232]],["body/classes/Sales.html",[3,0.158,4,0.135,5,0.135,7,0.234,10,2.267,11,0.03,12,0.917,15,1.384,16,0.297,20,0.158,21,0.127,26,0.015,27,0.015,60,0.492,63,0.961,70,1.897,72,0.917,81,3.651,86,2.324,95,3.095,101,2.663,127,2.835,128,2.835,129,2.835,131,2.835,132,2.835,133,2.835,135,2.835,136,2.835,148,1.799,156,1.54,168,1.508,169,1.508,179,1.428,180,2.835,181,3.249,182,1.897,183,1.215,184,3.249,185,3.651,186,3.249,192,2.663,195,4.377,203,2.324,205,3.249,207,2.324,208,1.508,209,3.249,210,1.728,211,1.728,213,1.508,214,1.009,295,2.835,375,2.329,379,1.728,380,2.062,381,2.062,382,2.062,383,2.062,384,2.062,385,2.062,386,3.179,387,4.358,388,4.483,389,4.358,390,2.062,391,2.062,392,4.358,393,4.358,394,4.358,395,2.062,396,2.062,397,2.062,398,2.062,399,2.062,400,2.062,401,2.062,402,2.062,403,2.062]],["title/controllers/SalesController.html",[0,1.334,404,2.099]],["body/controllers/SalesController.html",[0,1.416,2,1.416,3,0.262,4,0.223,5,0.223,7,0.387,8,1.619,10,1.308,11,0.03,12,0.529,14,1.209,16,0.422,17,0.817,20,0.262,21,0.21,22,2.228,24,1.209,26,0.021,27,0.021,72,0.529,76,1.416,124,3.163,176,1.209,183,2.108,220,2.501,221,2.138,228,3.775,230,1.416,231,1.416,232,1.897,245,2.501,246,2.866,247,2.501,249,2.501,252,1.416,255,2.501,258,2.501,259,1.537,260,1.537,262,1.829,263,2.228,264,2.501,367,2.228,404,2.983,405,2.866,406,3.775,407,2.501,408,3.421,409,2.76,410,2.866,411,2.501,412,2.866,413,3.421,414,3.421,415,3.421]],["title/modules/SalesModule.html",[28,1.448,36,1.894]],["body/modules/SalesModule.html",[2,2.049,3,0.295,4,0.251,5,0.251,11,0.03,16,0.457,17,0.919,20,0.295,21,0.236,26,0.023,27,0.023,28,2.224,30,1.882,31,2.42,36,3.592,38,2.907,39,2.261,40,2.261,42,3.223,43,2.506,48,2.506,49,1.729,404,3.562,409,3.268,410,3.224,416,3.224,417,3.224,418,3.849,419,3.849,420,2.261,421,3.224,422,3.849]],["title/classes/SalesRepository.html",[21,0.198,420,1.894]],["body/classes/SalesRepository.html",[3,0.212,4,0.18,5,0.18,7,0.313,8,1.397,11,0.031,12,0.612,14,0.978,16,0.386,17,0.661,20,0.212,21,0.17,24,0.978,26,0.018,27,0.018,60,0.661,63,1.196,70,1.934,72,0.612,124,2.961,127,2.891,128,2.891,129,2.891,130,2.891,131,2.891,132,2.891,133,2.891,134,3.314,135,2.891,136,2.891,139,1.626,150,1.479,176,0.978,179,1.777,183,1.764,214,1.353,217,2.318,221,1.911,230,1.146,231,1.146,232,1.637,252,1.146,259,1.777,260,1.243,262,1.479,286,3.006,290,2.023,292,2.023,293,1.802,296,2.023,305,1.802,307,1.802,308,2.576,309,2.023,310,2.023,311,2.324,312,2.114,314,2.023,315,2.023,316,2.023,372,2.023,406,2.891,407,2.891,411,2.023,420,2.324,423,2.318,424,4.615,425,2.767,426,2.767,427,2.767,428,2.767,429,2.767,430,2.767,431,2.767,432,2.767,433,2.767,434,2.767,435,2.767,436,2.767,437,2.318,438,2.767,439,2.767,440,2.767]],["title/injectables/SalesService.html",[53,1.334,409,1.723]],["body/injectables/SalesService.html",[3,0.254,4,0.216,5,0.216,7,0.375,8,1.584,11,0.03,12,0.694,14,1.171,16,0.467,17,0.791,20,0.254,21,0.204,24,1.171,26,0.02,27,0.02,49,1.489,53,1.856,54,1.947,59,1.489,61,2.423,72,0.694,124,3.041,148,1.267,168,2.423,176,1.584,183,1.267,221,2.104,230,1.856,231,1.856,232,1.856,252,1.372,253,1.947,282,1.772,318,3.278,328,2.423,330,2.423,332,2.423,372,2.423,406,3.278,407,3.278,409,2.397,411,2.423,420,3.445,421,2.777,441,2.777,442,3.314,443,3.314,444,3.314,445,3.314,446,3.314,447,3.314]],["title/classes/UpdateProductDto.html",[21,0.198,244,1.894]],["body/classes/UpdateProductDto.html",[3,0.348,4,0.296,5,0.296,11,0.029,16,0.42,20,0.348,21,0.279,26,0.025,27,0.025,59,2.042,60,1.085,62,3.322,179,2.042,244,3.225,253,2.67,448,3.807,449,3.807,450,3.322,451,3.322,452,3.807,453,4.544]],["title/classes/UpdateUserDto.html",[21,0.198,454,1.894]],["body/classes/UpdateUserDto.html",[3,0.348,4,0.296,5,0.296,11,0.029,16,0.42,20,0.348,21,0.279,26,0.025,27,0.025,60,1.085,173,2.222,175,3.322,179,2.042,449,3.807,450,3.322,451,3.322,452,3.807,454,3.225,455,3.807,456,2.959,457,4.544]],["title/classes/UserRepository.html",[21,0.198,458,1.894]],["body/classes/UserRepository.html",[3,0.242,4,0.206,5,0.206,7,0.358,8,1.534,11,0.03,12,0.672,14,1.117,16,0.409,17,0.755,20,0.242,21,0.194,24,1.117,26,0.02,27,0.02,60,0.755,63,1.313,72,0.672,139,1.857,150,1.689,156,1.752,173,2.827,176,1.752,179,1.951,214,1.546,221,2.053,230,1.309,231,1.309,232,1.797,252,1.309,259,1.951,260,1.42,262,1.689,286,3.229,290,2.311,292,2.311,293,2.058,296,2.311,305,2.058,307,2.058,308,2.058,309,2.311,310,2.311,311,2.551,312,2.32,314,2.311,315,2.311,316,2.311,376,2.058,456,2.058,458,2.551,459,2.648,460,4.959,461,3.637,462,3.161,463,3.637,464,3.161,465,3.161,466,3.161,467,3.161,468,3.161]],["title/classes/Users.html",[21,0.198,156,1.139]],["body/classes/Users.html",[3,0.278,4,0.237,5,0.237,7,0.411,10,2.033,11,0.03,12,0.823,15,1.232,16,0.365,20,0.278,21,0.223,26,0.022,27,0.022,60,0.866,63,1.441,72,0.823,95,2.546,156,1.683,176,1.879,179,2.14,180,3.887,182,2.601,183,2.378,195,3.887,202,3.041,203,2.653,207,3.482,208,3.887,213,3.482,214,1.775,215,3.041,437,3.041,469,3.041,470,3.629,471,3.629,472,3.629]],["title/controllers/UsersController.html",[0,1.334,473,2.099]],["body/controllers/UsersController.html",[0,1.021,2,1.021,3,0.189,4,0.161,5,0.161,7,0.279,8,1.286,10,1.652,11,0.031,12,0.669,14,1.528,15,1.118,16,0.39,17,0.589,20,0.189,21,0.152,22,1.607,23,2.067,24,1.946,26,0.017,27,0.017,72,0.382,76,1.79,156,1.798,173,2.604,176,1.286,182,2.489,220,1.803,221,2.389,228,3.16,230,1.506,231,1.506,232,2.204,234,2.067,238,3.622,242,2.067,245,2.66,247,1.803,249,1.803,252,1.021,255,2.66,258,1.803,259,1.942,260,1.942,262,1.319,263,1.607,264,1.803,271,3.049,373,1.449,375,1.945,377,1.449,378,2.66,412,3.049,454,2.54,456,1.607,461,3.622,463,2.067,473,2.37,474,2.067,475,3.998,476,3.049,477,2.467,478,2.467,479,2.067,480,2.467,481,2.311,482,2.067,483,2.467,484,2.467,485,4.323,486,2.467,487,2.467,488,2.467,489,2.067,490,2.467,491,2.467,492,2.467,493,2.467,494,2.467,495,2.467,496,2.467]],["title/modules/UsersModule.html",[28,1.448,37,1.894]],["body/modules/UsersModule.html",[2,2.049,3,0.295,4,0.251,5,0.251,11,0.03,16,0.457,17,0.919,20,0.295,21,0.236,26,0.023,27,0.023,28,2.224,30,1.882,31,2.42,37,3.592,38,2.907,39,2.261,40,2.261,42,3.223,43,2.506,48,2.506,49,1.729,458,2.261,473,3.562,481,3.268,482,3.224,497,3.224,498,3.224,499,3.849,500,3.849,501,3.224,502,3.849]],["title/injectables/UsersService.html",[53,1.334,481,1.723]],["body/injectables/UsersService.html",[3,0.187,4,0.159,5,0.159,7,0.276,8,1.276,11,0.03,12,0.735,14,1.79,16,0.388,17,0.583,20,0.187,21,0.15,24,1.939,26,0.016,27,0.016,49,1.097,53,1.495,54,1.435,72,0.665,95,2.835,156,1.991,173,2.322,176,1.79,182,2.594,183,1.815,221,2.382,230,1.779,231,1.779,232,2.196,252,1.011,259,1.623,260,1.623,311,2.122,312,1.93,318,2.64,328,1.785,330,1.785,332,1.785,335,3.026,337,2.046,340,2.046,375,2.297,376,1.59,454,2.122,456,1.59,458,3.117,475,3.978,476,3.026,479,3.026,481,1.93,489,2.046,501,2.046,503,2.046,504,3.611,505,2.442,506,2.442,507,3.611,508,2.442,509,2.442,510,2.442,511,2.442,512,2.442,513,2.442,514,2.442,515,3.611,516,2.442,517,2.442,518,2.442,519,2.442,520,2.442,521,2.442,522,4.748,523,2.442,524,2.442,525,2.442,526,2.442,527,2.442]],["title/classes/arrayReturnUsersDto.html",[21,0.198,377,1.894]],["body/classes/arrayReturnUsersDto.html",[3,0.308,4,0.263,5,0.263,7,0.456,11,0.03,12,0.788,15,1.445,16,0.308,20,0.39,21,0.313,26,0.023,27,0.023,60,0.961,63,1.541,72,0.788,76,2.431,156,2.14,369,2.623,373,2.366,374,4.084,375,2.986,376,2.623,377,2.993,378,4.084,528,4.027,529,4.027]],["title/coverage.html",[530,3.216]],["body/coverage.html",[0,2.055,1,1.746,5,0.175,6,2.247,11,0.03,18,1.433,21,0.385,26,0.018,27,0.018,46,1.96,53,2.055,55,2.247,59,1.205,61,1.96,62,2.827,72,0.415,124,1.433,125,2.247,126,2.247,148,1.025,156,0.948,173,1.311,174,2.247,175,2.827,178,2.247,183,1.478,218,1.746,219,2.247,244,1.576,250,1.433,254,1.746,282,1.433,285,2.247,312,1.433,317,2.247,359,5.46,363,2.247,364,2.247,367,1.746,368,2.247,369,2.953,373,1.576,374,2.827,375,2.067,377,1.576,379,2.247,404,1.746,405,2.247,409,1.433,420,1.576,423,2.247,441,2.247,448,2.247,454,1.576,455,2.247,458,1.576,459,2.247,469,2.247,473,1.746,474,2.247,481,1.433,503,2.247,530,1.96,531,2.682,532,2.682,533,2.682,534,4.964,535,2.247,536,2.682,537,4.964,538,2.247,539,2.682,540,2.247,541,2.682,542,5.784,543,2.682,544,2.682,545,2.682,546,2.682,547,2.682,548,3.867,549,2.682,550,2.682,551,2.682]],["title/dependencies.html",[31,1.896,552,2.691]],["body/dependencies.html",[11,0.03,17,0.991,21,0.319,26,0.024,27,0.024,31,2.029,49,1.864,117,2.702,214,2.029,450,3.033,451,3.033,553,5.665,554,4.15,555,4.15,556,4.15,557,4.15,558,4.15,559,4.15,560,4.15,561,4.15,562,4.15,563,4.15,564,4.15,565,4.15,566,4.15,567,4.15,568,4.15,569,4.15,570,4.15,571,4.15,572,4.15]],["title/miscellaneous/functions.html",[573,1.753,574,3.248]],["body/miscellaneous/functions.html",[7,0.56,11,0.026,26,0.026,27,0.026,538,4.142,540,5.121,573,3.22,574,4.142,575,4.944]],["title/index.html",[7,0.305,576,2.691,577,2.691]],["body/index.html",[4,0.225,11,0.03,26,0.021,27,0.021,64,2.025,286,2.244,530,2.519,578,3.446,579,3.446,580,4.603,581,3.446,582,3.446,583,3.446,584,3.446,585,3.446,586,3.446,587,5.183,588,3.446,589,3.446,590,3.446,591,6.055,592,3.446,593,3.446,594,3.446,595,5.93,596,3.446,597,3.446,598,4.603,599,3.446,600,3.446,601,3.446,602,3.446,603,4.603,604,4.603,605,3.446,606,3.446,607,3.446,608,4.603,609,4.603,610,3.446,611,3.446,612,3.446,613,3.446,614,3.446,615,2.887,616,3.446,617,3.446,618,3.446,619,3.446,620,3.446,621,3.446,622,3.446,623,3.446,624,3.446,625,3.446,626,3.446,627,3.446,628,3.446,629,3.446,630,3.446,631,3.446,632,3.446,633,3.446]],["title/modules.html",[30,2.152]],["body/modules.html",[11,0.025,26,0.025,27,0.025,29,3.017,30,2.266,35,2.722,36,2.722,37,2.722,615,5.166,634,6.165,635,6.165,636,6.165]],["title/overview.html",[637,3.686]],["body/overview.html",[2,1.562,11,0.029,18,2.896,26,0.022,27,0.022,29,4.164,30,1.845,31,2.389,32,3.161,33,3.161,34,3.161,35,3.488,36,3.488,37,3.488,38,2.87,39,2.216,40,2.216,54,2.216,60,0.901,250,2.896,278,3.161,279,3.161,409,2.896,416,3.161,417,3.161,481,2.896,497,3.161,498,3.161,637,3.161,638,5.418,639,3.773]],["title/miscellaneous/variables.html",[573,1.753,640,3.248]],["body/miscellaneous/variables.html",[7,0.496,11,0.029,26,0.025,27,0.025,46,3.922,72,0.83,388,3.668,535,3.668,573,2.851,640,3.668,641,4.378,642,4.378,643,4.378,644,4.378,645,4.378,646,4.378,647,4.378,648,4.378,649,4.378,650,4.378,651,5.366,652,4.378,653,4.378,654,4.378,655,4.378,656,4.378,657,4.378,658,4.378]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":359,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["0.2.38",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":101,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Sales.html":{}}}],["120",{"_index":108,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["15",{"_index":639,"title":{},"body":{"overview.html":{}}}],["2",{"_index":81,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Sales.html":{}}}],["20",{"_index":86,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/Sales.html":{}}}],["200",{"_index":102,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["23505",{"_index":310,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["3.0.2",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":638,"title":{},"body":{"overview.html":{}}}],["40",{"_index":93,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["5",{"_index":163,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["5432",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":141,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Product.html":{}}}],["7.2.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["alterado",{"_index":274,"title":{},"body":{"controllers/ProductController.html":{}}}],["amazing",{"_index":616,"title":{},"body":{"index.html":{}}}],["ao",{"_index":139,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["app",{"_index":593,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":586,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arrayreturnusersdto",{"_index":377,"title":{"classes/arrayReturnUsersDto.html":{}},"body":{"classes/ReturnUsersDto.html":{},"controllers/UsersController.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["async",{"_index":221,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":626,"title":{},"body":{"index.html":{}}}],["await",{"_index":260,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":617,"title":{},"body":{"index.html":{}}}],["banco",{"_index":355,"title":{},"body":{"injectables/ProductService.html":{}}}],["baseentity",{"_index":180,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{}}}],["body",{"_index":245,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["body(validationpipe",{"_index":258,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":636,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":634,"title":{},"body":{"modules.html":{}}}],["building",{"_index":581,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":262,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["cadastrados",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["cadastrar",{"_index":316,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["caracteres",{"_index":119,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["caracteres'})@maxlength(200",{"_index":82,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["caracteres'})@maxlength(60",{"_index":91,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["carcateres",{"_index":87,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["cartão",{"_index":145,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["cartão'})@maxlength(20",{"_index":144,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["cartão'})@maxlength(60",{"_index":140,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["cascade",{"_index":387,"title":{},"body":{"classes/Sales.html":{}}}],["catch",{"_index":307,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["class",{"_index":21,"title":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"classes/arrayReturnUsersDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":60,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"classes/arrayReturnUsersDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":278,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":279,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_salesmodule",{"_index":416,"title":{},"body":{"modules/SalesModule.html":{},"overview.html":{}}}],["cluster_salesmodule_providers",{"_index":417,"title":{},"body":{"modules/SalesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":498,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":195,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{}}}],["column('decimal",{"_index":392,"title":{},"body":{"classes/Sales.html":{}}}],["column({nullable",{"_index":188,"title":{},"body":{"classes/Product.html":{}}}],["com",{"_index":263,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["configs/typeorm.configs",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":292,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["conflictexception('produto",{"_index":313,"title":{},"body":{"classes/ProductRepository.html":{}}}],["conflictexception('usuario",{"_index":468,"title":{},"body":{"classes/UserRepository.html":{}}}],["conflictexception('venda",{"_index":440,"title":{},"body":{"classes/SalesRepository.html":{}}}],["console.log",{"_index":439,"title":{},"body":{"classes/SalesRepository.html":{}}}],["const",{"_index":259,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":318,"title":{},"body":{"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["constructor(productrepository",{"_index":319,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(salesrepository",{"_index":442,"title":{},"body":{"injectables/SalesService.html":{}}}],["constructor(userrepository",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('product",{"_index":257,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('sales",{"_index":413,"title":{},"body":{"controllers/SalesController.html":{}}}],["controller('users",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":530,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":452,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["createdad",{"_index":181,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["createdatecolumn",{"_index":186,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["createproductdto",{"_index":59,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproducts",{"_index":222,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["createproducts(createproductdto",{"_index":227,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["createsales",{"_index":406,"title":{},"body":{"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{}}}],["createsales(createsalesdto",{"_index":407,"title":{},"body":{"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{}}}],["createsalesdto",{"_index":124,"title":{"classes/CreateSalesDto.html":{}},"body":{"classes/CreateSalesDto.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["createuser",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser(createusertdto",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":173,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createusers",{"_index":461,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":463,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["createusertdto",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["código",{"_index":149,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["da",{"_index":99,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["dados",{"_index":354,"title":{},"body":{"injectables/ProductService.html":{}}}],["data",{"_index":160,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["database",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":185,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["de",{"_index":85,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"injectables/ProductService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"classes/Users.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{}}}],["delete",{"_index":248,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete(':id",{"_index":234,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["deleteproduct",{"_index":223,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["deleteproduct(@param('id",{"_index":275,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":233,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(productid",{"_index":322,"title":{},"body":{"injectables/ProductService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":64,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"index.html":{}}}],["descrição",{"_index":83,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["descrição'})@minlength(2",{"_index":75,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["deve",{"_index":78,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["development",{"_index":594,"title":{},"body":{"index.html":{}}}],["docker",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":412,"title":{},"body":{"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["dto.ts",{"_index":369,"title":{},"body":{"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":528,"title":{},"body":{"classes/arrayReturnUsersDto.html":{}}}],["dto.ts:4",{"_index":371,"title":{},"body":{"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{}}}],["dto.ts:5",{"_index":370,"title":{},"body":{"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{}}}],["dto.ts:9",{"_index":529,"title":{},"body":{"classes/arrayReturnUsersDto.html":{}}}],["dto/create",{"_index":252,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/return",{"_index":255,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["dto/update",{"_index":329,"title":{},"body":{"injectables/ProductService.html":{}}}],["e2e",{"_index":605,"title":{},"body":{"index.html":{}}}],["eager",{"_index":389,"title":{},"body":{"classes/Sales.html":{}}}],["efficient",{"_index":582,"title":{},"body":{"index.html":{}}}],["encontrado",{"_index":340,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["encontrados",{"_index":268,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["entities",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/product.entity",{"_index":291,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{}}}],["entities/sales.entity",{"_index":372,"title":{},"body":{"classes/ReturnSalesDto.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{}}}],["entities/user.entity",{"_index":376,"title":{},"body":{"classes/ReturnUsersDto.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{}}}],["entity",{"_index":207,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{}}}],["entity.{js,ts",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":290,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(product",{"_index":294,"title":{},"body":{"classes/ProductRepository.html":{}}}],["entityrepository(sales",{"_index":427,"title":{},"body":{"classes/SalesRepository.html":{}}}],["entityrepository(users",{"_index":465,"title":{},"body":{"classes/UserRepository.html":{}}}],["erro",{"_index":351,"title":{},"body":{"injectables/ProductService.html":{}}}],["error",{"_index":308,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["error.code.tostring",{"_index":309,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{}}}],["express",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":179,"title":{},"body":{"classes/Product.html":{},"classes/ProductRepository.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{}}}],["false",{"_index":189,"title":{},"body":{"classes/Product.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["findall",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findalluser",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneuser",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneuser(@param('id",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["findoneuser(id",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findproduct",{"_index":287,"title":{},"body":{"classes/ProductRepository.html":{}}}],["findproductid",{"_index":224,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductid(@param('id",{"_index":269,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductid(id",{"_index":237,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductid(productid",{"_index":324,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsall",{"_index":225,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findsales",{"_index":424,"title":{},"body":{"classes/SalesRepository.html":{}}}],["findusers",{"_index":460,"title":{},"body":{"classes/UserRepository.html":{}}}],["foi",{"_index":360,"title":{},"body":{"injectables/ProductService.html":{}}}],["found",{"_index":265,"title":{},"body":{"controllers/ProductController.html":{}}}],["framework",{"_index":580,"title":{},"body":{"index.html":{}}}],["function",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":574,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":238,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":576,"title":{"index.html":{}},"body":{}}],["grow",{"_index":612,"title":{},"body":{"index.html":{}}}],["h",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":623,"title":{},"body":{"index.html":{}}}],["host",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":630,"title":{},"body":{"index.html":{}}}],["id",{"_index":182,"title":{},"body":{"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Sales.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["igual",{"_index":138,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["imagem",{"_index":122,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["imagem'})@minlength(10",{"_index":100,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{}}}],["informado",{"_index":362,"title":{},"body":{"injectables/ProductService.html":{}}}],["informe",{"_index":74,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":330,"title":{},"body":{"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(productrepository",{"_index":331,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectrepository(salesrepository",{"_index":446,"title":{},"body":{"injectables/SalesService.html":{}}}],["injectrepository(userrepository",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":590,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":592,"title":{},"body":{"index.html":{}}}],["internalservererrorexception",{"_index":293,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["internalservererrorexception('erro",{"_index":315,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["isarray",{"_index":167,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["isnotempty",{"_index":112,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty({message",{"_index":73,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["isnumber",{"_index":113,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{}}}],["isnumber()@isoptional",{"_index":96,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":115,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{}}}],["isoptional()@isnumber",{"_index":158,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["isoptional({message",{"_index":137,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["j",{"_index":314,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["join",{"_index":619,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":210,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["jointable",{"_index":212,"title":{},"body":{"classes/Product.html":{}}}],["kamil",{"_index":627,"title":{},"body":{"index.html":{}}}],["length",{"_index":166,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Product.html":{}}}],["length(5",{"_index":172,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["license",{"_index":633,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":609,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localizado",{"_index":271,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["manytomany",{"_index":211,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["manytoone",{"_index":209,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["manytoone(undefined",{"_index":386,"title":{},"body":{"classes/Sales.html":{}}}],["marca",{"_index":92,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["marca'})@minlength(2",{"_index":90,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":114,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":170,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["maxlength(200",{"_index":121,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["maxlength(60",{"_index":120,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["menos",{"_index":84,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["mes/ano",{"_index":164,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["message",{"_index":76,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"controllers/ProductController.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{},"classes/arrayReturnUsersDto.html":{}}}],["metadata",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimo",{"_index":80,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["minlength",{"_index":116,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(10",{"_index":123,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["minlength(2",{"_index":118,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":608,"title":{},"body":{"index.html":{}}}],["mm/yy",{"_index":171,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["mm/yy'})@length(5",{"_index":162,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["mode",{"_index":598,"title":{},"body":{"index.html":{}}}],["modelo",{"_index":105,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["modelo'})@minlength(2",{"_index":104,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":622,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":628,"title":{},"body":{"index.html":{}}}],["name",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["namecard",{"_index":127,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["nest",{"_index":587,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":632,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":450,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":312,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":579,"title":{},"body":{"index.html":{}}}],["nome",{"_index":77,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["nome'})@minlength(2",{"_index":107,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["notfoundexception",{"_index":328,"title":{},"body":{"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('bão",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('pedido",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('produtos",{"_index":336,"title":{},"body":{"injectables/ProductService.html":{}}}],["notfoundexception('profissional",{"_index":339,"title":{},"body":{"injectables/ProductService.html":{}}}],["npm",{"_index":591,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":216,"title":{},"body":{"classes/Product.html":{}}}],["number",{"_index":95,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["numbercard",{"_index":128,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["numero",{"_index":143,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["não",{"_index":337,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["o",{"_index":89,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"injectables/ProductService.html":{}}}],["onetomany",{"_index":213,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{}}}],["onetomany(undefined",{"_index":202,"title":{},"body":{"classes/Product.html":{},"classes/Users.html":{}}}],["onetoone",{"_index":401,"title":{},"body":{"classes/Sales.html":{}}}],["open",{"_index":610,"title":{},"body":{"index.html":{}}}],["optional",{"_index":231,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ordernumber",{"_index":129,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["os",{"_index":353,"title":{},"body":{"injectables/ProductService.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":637,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":552,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":247,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":272,"title":{},"body":{"controllers/ProductController.html":{}}}],["parameters",{"_index":230,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":449,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":453,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createuserdto",{"_index":457,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":246,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{}}}],["patch(':id",{"_index":242,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["pedido",{"_index":415,"title":{},"body":{"controllers/SalesController.html":{}}}],["pedidos",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["pg",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["pgecom",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pgpassword",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":620,"title":{},"body":{"index.html":{}}}],["port",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":228,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["postgres",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["precision",{"_index":393,"title":{},"body":{"classes/Sales.html":{}}}],["prefix",{"_index":220,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":208,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":192,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["private",{"_index":332,"title":{},"body":{"injectables/ProductService.html":{},"injectables/SalesService.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":148,"title":{"classes/Product.html":{}},"body":{"classes/CreateSalesDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/Sales.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["product.controller",{"_index":281,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.description",{"_index":345,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.dto",{"_index":253,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":62,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:15",{"_index":109,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:22",{"_index":94,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:29",{"_index":106,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:36",{"_index":88,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:43",{"_index":103,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:47",{"_index":110,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:51",{"_index":97,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:55",{"_index":111,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.productbrand",{"_index":343,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.productbuyprice",{"_index":347,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.productimage",{"_index":346,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.productmodel",{"_index":344,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.productname",{"_index":342,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.productquantity",{"_index":349,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.productsalesprice",{"_index":348,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.repository",{"_index":283,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["product.sales",{"_index":403,"title":{},"body":{"classes/Sales.html":{}}}],["product.save",{"_index":350,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":251,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["productbrand",{"_index":65,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productbuyprice",{"_index":66,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productcontroller",{"_index":218,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":130,"title":{},"body":{"classes/CreateSalesDto.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{}}}],["productimage",{"_index":67,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["production",{"_index":600,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":68,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productmodule",{"_index":35,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productname",{"_index":69,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productquantity",{"_index":70,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["productrepository",{"_index":282,"title":{"classes/ProductRepository.html":{}},"body":{"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["products",{"_index":295,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/Sales.html":{}}}],["products.description",{"_index":300,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.dto",{"_index":256,"title":{},"body":{"controllers/ProductController.html":{}}}],["products.dto.ts",{"_index":364,"title":{},"body":{"classes/ReturnProductDto.html":{},"coverage.html":{}}}],["products.dto.ts:4",{"_index":366,"title":{},"body":{"classes/ReturnProductDto.html":{}}}],["products.dto.ts:5",{"_index":365,"title":{},"body":{"classes/ReturnProductDto.html":{}}}],["products.productbrand",{"_index":298,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.productbuyprice",{"_index":304,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.productimage",{"_index":301,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.productmodel",{"_index":299,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.productname",{"_index":297,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.productquantity",{"_index":302,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.productsalesprice",{"_index":303,"title":{},"body":{"classes/ProductRepository.html":{}}}],["products.save",{"_index":306,"title":{},"body":{"classes/ProductRepository.html":{}}}],["productsalesprice",{"_index":71,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productservice",{"_index":250,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":150,"title":{},"body":{"classes/CreateSalesDto.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["produtos",{"_index":267,"title":{},"body":{"controllers/ProductController.html":{}}}],["progressive",{"_index":578,"title":{},"body":{"index.html":{}}}],["project",{"_index":611,"title":{},"body":{"index.html":{}}}],["promise",{"_index":232,"title":{},"body":{"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":63,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"classes/ProductRepository.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"classes/arrayReturnUsersDto.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":621,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["removes",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["removido",{"_index":277,"title":{},"body":{"controllers/ProductController.html":{}}}],["repository",{"_index":286,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":356,"title":{},"body":{"injectables/ProductService.html":{}}}],["result.affected",{"_index":358,"title":{},"body":{"injectables/ProductService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returnproductdto",{"_index":254,"title":{"classes/ReturnProductDto.html":{}},"body":{"controllers/ProductController.html":{},"classes/ReturnProductDto.html":{},"coverage.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returnsalesdto",{"_index":367,"title":{"classes/ReturnSalesDto.html":{}},"body":{"classes/ReturnSalesDto.html":{},"controllers/SalesController.html":{},"coverage.html":{}}}],["returnusersdto",{"_index":373,"title":{"classes/ReturnUsersDto.html":{}},"body":{"classes/ReturnUsersDto.html":{},"controllers/UsersController.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["rimraf",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":595,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["sales",{"_index":183,"title":{"classes/Sales.html":{}},"body":{"classes/Product.html":{},"classes/ReturnSalesDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["sales.controller",{"_index":419,"title":{},"body":{"modules/SalesModule.html":{}}}],["sales.dto",{"_index":411,"title":{},"body":{"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{}}}],["sales.dto.ts",{"_index":126,"title":{},"body":{"classes/CreateSalesDto.html":{},"coverage.html":{}}}],["sales.dto.ts:14",{"_index":152,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:17",{"_index":155,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:20",{"_index":154,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:23",{"_index":153,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:26",{"_index":147,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:32",{"_index":146,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:38",{"_index":165,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:44",{"_index":142,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:48",{"_index":159,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:50",{"_index":157,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.dto.ts:53",{"_index":151,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["sales.namecard",{"_index":433,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.numbercard",{"_index":434,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.ordernumber",{"_index":432,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.productquantity",{"_index":428,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.products",{"_index":217,"title":{},"body":{"classes/Product.html":{},"classes/SalesRepository.html":{}}}],["sales.repository",{"_index":421,"title":{},"body":{"modules/SalesModule.html":{},"injectables/SalesService.html":{}}}],["sales.save",{"_index":438,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.service",{"_index":410,"title":{},"body":{"controllers/SalesController.html":{},"modules/SalesModule.html":{}}}],["sales.totalquantity",{"_index":431,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.totalvalueitem",{"_index":429,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.totalvaluesale",{"_index":430,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.user",{"_index":437,"title":{},"body":{"classes/SalesRepository.html":{},"classes/Users.html":{}}}],["sales.validationcode",{"_index":435,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales.validationdate",{"_index":436,"title":{},"body":{"classes/SalesRepository.html":{}}}],["sales/sales.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["salescontroller",{"_index":404,"title":{"controllers/SalesController.html":{}},"body":{"controllers/SalesController.html":{},"modules/SalesModule.html":{},"coverage.html":{}}}],["salesmodule",{"_index":36,"title":{"modules/SalesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SalesModule.html":{},"modules.html":{},"overview.html":{}}}],["salesrepository",{"_index":420,"title":{"classes/SalesRepository.html":{}},"body":{"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["salesservice",{"_index":409,"title":{"injectables/SalesService.html":{}},"body":{"controllers/SalesController.html":{},"modules/SalesModule.html":{},"injectables/SalesService.html":{},"coverage.html":{},"overview.html":{}}}],["salvar",{"_index":352,"title":{},"body":{"injectables/ProductService.html":{}}}],["scalable",{"_index":583,"title":{},"body":{"index.html":{}}}],["scale",{"_index":394,"title":{},"body":{"classes/Sales.html":{}}}],["select",{"_index":335,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":584,"title":{},"body":{"index.html":{}}}],["side",{"_index":585,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"modules/SalesModule.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"index.html":{}}}],["sponsors",{"_index":614,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.configs.ts",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["src/configs/typeorm.configs.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product/dto/create",{"_index":61,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/SalesService.html":{},"coverage.html":{}}}],["src/product/dto/return",{"_index":363,"title":{},"body":{"classes/ReturnProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":448,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":168,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"injectables/SalesService.html":{}}}],["src/product/entities/product.entity.ts",{"_index":178,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:20",{"_index":193,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:23",{"_index":199,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:26",{"_index":194,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:29",{"_index":198,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:32",{"_index":191,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:35",{"_index":197,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:38",{"_index":200,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:41",{"_index":196,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:44",{"_index":201,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:47",{"_index":187,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:50",{"_index":206,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:53",{"_index":204,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":219,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:20",{"_index":229,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:31",{"_index":240,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:40",{"_index":239,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:49",{"_index":243,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:64",{"_index":235,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":280,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.repository",{"_index":445,"title":{},"body":{"injectables/SalesService.html":{}}}],["src/product/product.repository.ts",{"_index":285,"title":{},"body":{"classes/ProductRepository.html":{},"coverage.html":{}}}],["src/product/product.repository.ts:11",{"_index":288,"title":{},"body":{"classes/ProductRepository.html":{}}}],["src/product/product.repository.ts:13",{"_index":289,"title":{},"body":{"classes/ProductRepository.html":{}}}],["src/product/product.service.ts",{"_index":317,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:102",{"_index":323,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:13",{"_index":320,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:19",{"_index":321,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:23",{"_index":326,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:42",{"_index":325,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:60",{"_index":327,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/sales/dto/create",{"_index":125,"title":{},"body":{"classes/CreateSalesDto.html":{},"coverage.html":{}}}],["src/sales/dto/return",{"_index":368,"title":{},"body":{"classes/ReturnSalesDto.html":{},"coverage.html":{}}}],["src/sales/entities/sales.entity",{"_index":215,"title":{},"body":{"classes/Product.html":{},"classes/Users.html":{}}}],["src/sales/entities/sales.entity.ts",{"_index":379,"title":{},"body":{"classes/Sales.html":{},"coverage.html":{}}}],["src/sales/entities/sales.entity.ts:20",{"_index":381,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:23",{"_index":391,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:26",{"_index":396,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:29",{"_index":395,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:32",{"_index":385,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:35",{"_index":380,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:38",{"_index":397,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:41",{"_index":383,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:44",{"_index":400,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:47",{"_index":382,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:50",{"_index":399,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:53",{"_index":384,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:59",{"_index":398,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/entities/sales.entity.ts:65",{"_index":390,"title":{},"body":{"classes/Sales.html":{}}}],["src/sales/sales.controller.ts",{"_index":405,"title":{},"body":{"controllers/SalesController.html":{},"coverage.html":{}}}],["src/sales/sales.controller.ts:18",{"_index":408,"title":{},"body":{"controllers/SalesController.html":{}}}],["src/sales/sales.module.ts",{"_index":418,"title":{},"body":{"modules/SalesModule.html":{}}}],["src/sales/sales.repository.ts",{"_index":423,"title":{},"body":{"classes/SalesRepository.html":{},"coverage.html":{}}}],["src/sales/sales.repository.ts:11",{"_index":425,"title":{},"body":{"classes/SalesRepository.html":{}}}],["src/sales/sales.repository.ts:13",{"_index":426,"title":{},"body":{"classes/SalesRepository.html":{}}}],["src/sales/sales.service.ts",{"_index":441,"title":{},"body":{"injectables/SalesService.html":{},"coverage.html":{}}}],["src/sales/sales.service.ts:11",{"_index":443,"title":{},"body":{"injectables/SalesService.html":{}}}],["src/sales/sales.service.ts:17",{"_index":444,"title":{},"body":{"injectables/SalesService.html":{}}}],["src/users/dto/create",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/return",{"_index":374,"title":{},"body":{"classes/ReturnUsersDto.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":455,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":169,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Product.html":{},"classes/Sales.html":{}}}],["src/users/entities/user.entity.ts",{"_index":469,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:13",{"_index":470,"title":{},"body":{"classes/Users.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":471,"title":{},"body":{"classes/Users.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":472,"title":{},"body":{"classes/Users.html":{}}}],["src/users/user.repository.ts",{"_index":459,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/users/user.repository.ts:11",{"_index":462,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/user.repository.ts:13",{"_index":464,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/users.controller.ts",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:39",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":499,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:13",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:8",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":596,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":599,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":601,"title":{},"body":{"index.html":{}}}],["started",{"_index":577,"title":{"index.html":{}},"body":{}}],["starter",{"_index":589,"title":{},"body":{"index.html":{}}}],["statements",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":624,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/arrayReturnUsersDto.html":{}}}],["sucesso",{"_index":264,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":615,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":635,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["ter",{"_index":79,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{}}}],["test",{"_index":604,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":607,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":606,"title":{},"body":{"index.html":{}}}],["tests",{"_index":603,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":613,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.create",{"_index":296,"title":{},"body":{"classes/ProductRepository.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["this.findproductid(id",{"_index":341,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.createproducts(createproductdto",{"_index":333,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.delete",{"_index":357,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.find",{"_index":334,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findone(productid",{"_index":338,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.createproducts(createproductdto",{"_index":261,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.deleteproduct(id",{"_index":276,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductid(id",{"_index":270,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductsall",{"_index":266,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.updateproduct",{"_index":273,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.salesrepository.createsales(createsalesdto",{"_index":447,"title":{},"body":{"injectables/SalesService.html":{}}}],["this.salesservice.createsales(createsalesdto",{"_index":414,"title":{},"body":{"controllers/SalesController.html":{}}}],["this.userrepository.createusers(createusertdto",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findalluser",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findoneuser(id",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":311,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["totalquantity",{"_index":131,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["totalvalueitem",{"_index":132,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["totalvaluesale",{"_index":133,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["touch",{"_index":625,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":388,"title":{},"body":{"classes/Sales.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":305,"title":{},"body":{"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{}}}],["twitter",{"_index":631,"title":{},"body":{"index.html":{}}}],["type",{"_index":72,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/ReturnProductDto.html":{},"classes/ReturnSalesDto.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/SalesController.html":{},"classes/SalesRepository.html":{},"injectables/SalesService.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":214,"title":{},"body":{"classes/Product.html":{},"classes/ProductRepository.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([productrepository",{"_index":284,"title":{},"body":{"modules/ProductModule.html":{}}}],["typeormmodule.forfeature([salesrepository",{"_index":422,"title":{},"body":{"modules/SalesModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":502,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":451,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":588,"title":{},"body":{"index.html":{}}}],["um",{"_index":361,"title":{},"body":{"injectables/ProductService.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{},"classes/Users.html":{}}}],["unit",{"_index":602,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":236,"title":{},"body":{"controllers/ProductController.html":{}}}],["update(@param('id",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedad",{"_index":184,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["updatedatecolumn",{"_index":205,"title":{},"body":{"classes/Product.html":{},"classes/Sales.html":{}}}],["updateproduct",{"_index":226,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["updateproduct(updateproductdto",{"_index":241,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["updateproductdto",{"_index":244,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":454,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":98,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["user",{"_index":375,"title":{},"body":{"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["user.dto",{"_index":456,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":177,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.repository",{"_index":501,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.sales",{"_index":402,"title":{},"body":{"classes/Sales.html":{}}}],["userid",{"_index":134,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/SalesRepository.html":{}}}],["username",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":458,"title":{"classes/UserRepository.html":{}},"body":{"classes/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":156,"title":{"classes/Users.html":{}},"body":{"classes/CreateSalesDto.html":{},"classes/Product.html":{},"classes/ReturnUsersDto.html":{},"classes/Sales.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/arrayReturnUsersDto.html":{},"coverage.html":{}}}],["users.controller",{"_index":500,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.name",{"_index":466,"title":{},"body":{"classes/UserRepository.html":{}}}],["users.save",{"_index":467,"title":{},"body":{"classes/UserRepository.html":{}}}],["users.service",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["usersarray",{"_index":378,"title":{},"body":{"classes/ReturnUsersDto.html":{},"controllers/UsersController.html":{},"classes/arrayReturnUsersDto.html":{}}}],["userscontroller",{"_index":473,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":37,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":481,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["validade",{"_index":161,"title":{},"body":{"classes/CreateSalesDto.html":{}}}],["validationcode",{"_index":135,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["validationdate",{"_index":136,"title":{},"body":{"classes/CreateSalesDto.html":{},"classes/Sales.html":{},"classes/SalesRepository.html":{}}}],["validationpipe",{"_index":249,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SalesController.html":{},"controllers/UsersController.html":{}}}],["validator",{"_index":117,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateSalesDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":190,"title":{},"body":{"classes/Product.html":{}}}],["variable",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":640,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":597,"title":{},"body":{"index.html":{}}}],["website",{"_index":629,"title":{},"body":{"index.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":618,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/SalesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nSalesModule\n\nSalesModule\n\nAppModule -->\n\nSalesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                        \n                            SalesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductModule } from './product/product.module';\nimport { TypeOrmConfig } from './configs/typeorm.configs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SalesModule } from './sales/sales.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ProductModule,\n    TypeOrmModule.forRoot(TypeOrmConfig),\n    SalesModule,\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productBrand\n                            \n                            \n                                ProductBuyPrice\n                            \n                            \n                                productImage\n                            \n                            \n                                productModel\n                            \n                            \n                                productName\n                            \n                            \n                                productQuantity\n                            \n                            \n                                productSalesPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Informe a descrição'})@MinLength(2, {message: 'Nome deve ter no minimo 2 caracteres'})@MaxLength(200, {message: 'A descrição deve ter menos de 20 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productBrand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Informe o marca'})@MinLength(2, {message: 'Nome deve ter no minimo 2 caracteres'})@MaxLength(60, {message: 'A marca deve ter menos de 40 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductBuyPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Informe a Url da imagem'})@MinLength(10, {message: 'Nome deve ter no minimo 10 caracteres'})@MaxLength(200, {message: 'A descrição deve ter menos de 200 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Informe o modelo'})@MinLength(2, {message: 'Nome deve ter no minimo 2 caracteres'})@MaxLength(60, {message: 'O modelo deve ter menos de 40 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Informe o nome'})@MinLength(2, {message: 'Nome deve ter no minimo 2 caracteres'})@MaxLength(60, {message: 'O nome deve ter menos de 120 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productSalesPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNumber,\n  MaxLength,\n  IsOptional,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateProductDto {\n  @IsNotEmpty({ message: 'Informe o nome' })\n  @MinLength(2, { message: 'Nome deve ter no minimo 2 caracteres' })\n  @MaxLength(60, {\n    message: 'O nome deve ter menos de 120 carcateres',\n  })\n  productName: string;\n\n  @IsNotEmpty({ message: 'Informe o marca' })\n  @MinLength(2, { message: 'Nome deve ter no minimo 2 caracteres' })\n  @MaxLength(60, {\n    message: 'A marca deve ter menos de 40 carcateres',\n  })\n  productBrand: string;\n\n  @IsNotEmpty({ message: 'Informe o modelo' })\n  @MinLength(2, { message: 'Nome deve ter no minimo 2 caracteres' })\n  @MaxLength(60, {\n    message: 'O modelo deve ter menos de 40 carcateres',\n  })\n  productModel: string;\n\n  @IsNotEmpty({ message: 'Informe a descrição' })\n  @MinLength(2, { message: 'Nome deve ter no minimo 2 caracteres' })\n  @MaxLength(200, {\n    message: 'A descrição deve ter menos de 20 carcateres',\n  })\n  description: string;\n\n  @IsNotEmpty({ message: 'Informe a Url da imagem' })\n  @MinLength(10, { message: 'Nome deve ter no minimo 10 caracteres' })\n  @MaxLength(200, {\n    message: 'A descrição deve ter menos de 200 carcateres',\n  })\n  productImage: string;\n\n  @IsNumber()\n  @IsOptional()\n  productQuantity: number;\n\n  @IsNumber()\n  @IsOptional()\n  ProductBuyPrice: number;\n\n  @IsNumber()\n  @IsOptional()\n  productSalesPrice: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSalesDto.html":{"url":"classes/CreateSalesDto.html","title":"class - CreateSalesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSalesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/dto/create-sales.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nameCard\n                            \n                            \n                                numberCard\n                            \n                            \n                                orderNumber\n                            \n                            \n                                productId\n                            \n                            \n                                productQuantity\n                            \n                            \n                                totalQuantity\n                            \n                            \n                                totalValueItem\n                            \n                            \n                                totalValueSale\n                            \n                            \n                                userId\n                            \n                            \n                                validationCode\n                            \n                            \n                                validationDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nameCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'Informe o nome igual ao do cartão'})@MaxLength(60, {message: 'O nome deve ter menos de 60 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'Informe o numero do cartão'})@MaxLength(20, {message: 'O numero do cartão deve ter menos de 20 carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'informe o código do produto'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueSale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'Informe a data de validade do cartão  MM/YY'})@Length(5, 5, {message: 'A data de validade mes/ano carcateres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/create-sales.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  MaxLength,\n  Length,\n  IsArray,\n} from 'class-validator';\nimport { Product } from 'src/product/entities/product.entity';\nimport { Users } from 'src/users/entities/user.entity';\n\nexport class CreateSalesDto {\n  @IsNumber()\n  productQuantity: number;\n\n  @IsNumber()\n  totalValueSale: number;\n\n  @IsNumber()\n  totalValueItem: number;\n\n  @IsNumber()\n  totalQuantity: number;\n\n  @IsNumber()\n  orderNumber: number;\n\n  @IsOptional({ message: 'Informe o numero do cartão' })\n  @MaxLength(20, {\n    message: 'O numero do cartão deve ter menos de 20 carcateres',\n  })\n  numberCard: string;\n\n  @IsOptional({ message: 'Informe a data de validade do cartão  MM/YY' })\n  @Length(5, 5, {\n    message: 'A data de validade mes/ano carcateres',\n  })\n  validationDate: string;\n\n  @IsOptional({ message: 'Informe o nome igual ao do cartão' })\n  @MaxLength(60, {\n    message: 'O nome deve ter menos de 60 carcateres',\n  })\n  nameCard: string;\n\n  @IsOptional()\n  @IsNumber()\n  validationCode: number;\n\n  userId: Users;\n\n  @IsNotEmpty({ message: 'informe o código do produto' })\n  productId: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNumber,\n  MaxLength,\n  IsOptional,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsOptional()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAd\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                productBrand\n                            \n                            \n                                productBuyPrice\n                            \n                            \n                                productImage\n                            \n                            \n                                productModel\n                            \n                            \n                                productName\n                            \n                            \n                                productQuantity\n                            \n                            \n                                productSalesPrice\n                            \n                            \n                                sales\n                            \n                            \n                                updatedAd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productBrand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar', length: 40})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productBuyPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar', length: 40})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar', length: 60})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productSalesPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sales\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sales[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n} from 'typeorm';\nimport { Users } from 'src/users/entities/user.entity';\nimport { Sales } from 'src/sales/entities/sales.entity';\n\n@Entity()\nexport class Product extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, type: 'varchar', length: 60 })\n  productName: string;\n\n  @Column({ nullable: false, type: 'varchar', length: 40 })\n  productBrand: string;\n\n  @Column({ nullable: false, type: 'varchar', length: 40 })\n  productModel: string;\n\n  @Column({ nullable: false, type: 'varchar', length: 200 })\n  description: string;\n\n  @Column({ nullable: false, type: 'varchar', length: 200 })\n  productImage: string;\n\n  @Column()\n  productQuantity: number;\n\n  @Column()\n  productBuyPrice: number;\n\n  @Column()\n  productSalesPrice: number;\n\n  @CreateDateColumn()\n  createdAd: Date;\n\n  @UpdateDateColumn()\n  updatedAd: Date;\n\n  @OneToMany(() => Sales, (sales) => sales.products)\n  sales: Sales[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                findProductId\n                            \n                            \n                                    Async\n                                findProductsAll\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductId(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductsAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductsAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(updateProductDto: CreateProductDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { ReturnProductDto } from './dto/return-products.dto';\n\n@Controller('product')\nexport class ProductController {\n  constructor(private productService: ProductService) {}\n\n  @Post()\n  async createProducts(\n    @Body(ValidationPipe) createProductDto: CreateProductDto,\n  ): Promise {\n    const product = await this.productService.createProducts(createProductDto);\n    return {\n      product,\n      message: 'Produto cadastrado com sucesso',\n    };\n  }\n\n  @Get()\n  async findProductsAll() {\n    const found = await this.productService.findProductsAll();\n    return {\n      found,\n      message: 'Produtos encontrados',\n    };\n  }\n\n  @Get(':id')\n  async findProductId(@Param('id') id): Promise {\n    const product = await this.productService.findProductId(id);\n    return {\n      product,\n      message: 'Produto Localizado',\n    };\n  }\n\n  @Patch(':id')\n  async updateProduct(\n    @Body(ValidationPipe) updateProductDto: CreateProductDto,\n    @Param('id') id: string,\n  ): Promise {\n    const product = await this.productService.updateProduct(\n      updateProductDto,\n      id,\n    );\n    return {\n      product,\n      message: 'Produto Alterado com sucesso',\n    };\n  }\n\n  @Delete(':id')\n  async deleteProduct(@Param('id') id: string) {\n    await this.productService.deleteProduct(id);\n    return {\n      message: 'Produto removido com sucesso',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductRepository } from './product.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductRepository])],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductRepository.html":{"url":"classes/ProductRepository.html","title":"class - ProductRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FindProduct\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FindProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/product/product.repository.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Product } from './entities/product.entity';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport {\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\n\n@EntityRepository(Product)\nexport class ProductRepository extends Repository {\n  FindProduct: any;\n\n  async createProducts(createProductDto: CreateProductDto): Promise {\n    const {\n      productName,\n      productBrand,\n      productModel,\n      description,\n      productImage,\n      productQuantity,\n      productSalesPrice,\n      ProductBuyPrice,\n    } = createProductDto;\n    const products = this.create();\n    products.productName = productName;\n    products.productBrand = productBrand;\n    products.productModel = productModel;\n    products.description = description;\n    products.productImage = productImage;\n    products.productQuantity = productQuantity;\n    products.productSalesPrice = productSalesPrice;\n    products.productBuyPrice = ProductBuyPrice;\n\n    try {\n      await products.save();\n      return products;\n    } catch (error) {\n      if (error.code.toString() === '23505') {\n        throw new ConflictException('Produto Já cadastrado');\n      } else {\n        throw new InternalServerErrorException('Erro ao cadastrar Produto');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                findProductId\n                            \n                            \n                                    Async\n                                findProductsAll\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: ProductRepository)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        ProductRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductId(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductsAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductsAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(updateProductDto: CreateProductDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductRepository } from './product.repository';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectRepository(ProductRepository)\n    private productRepository: ProductRepository,\n  ) {}\n\n  async createProducts(createProductDto: CreateProductDto): Promise {\n    return this.productRepository.createProducts(createProductDto);\n  }\n\n  async findProductsAll(): Promise {\n    const products = await this.productRepository.find({\n      select: [\n        'productName',\n        'id',\n        'productBrand',\n        'productModel',\n        'description',\n        'productImage',\n        'productQuantity',\n        'productBuyPrice',\n        'productSalesPrice',\n      ],\n    });\n    if (!products) throw new NotFoundException('Produtos não encontrados');\n\n    return products;\n  }\n\n  async findProductId(productId: string): Promise {\n    const product = await this.productRepository.findOne(productId, {\n      select: [\n        'productName',\n        'id',\n        'productBrand',\n        'productModel',\n        'description',\n        'productImage',\n        'productQuantity',\n        'productBuyPrice',\n        'productSalesPrice',\n      ],\n    });\n    if (!product) throw new NotFoundException('Profissional não encontrado');\n    return product;\n  }\n\n  async updateProduct(\n    updateProductDto: CreateProductDto,\n    id: string,\n  ): Promise {\n    const product = await this.findProductId(id);\n\n    const {\n      productName,\n      productBrand,\n      productModel,\n      description,\n      productImage,\n      productSalesPrice,\n      ProductBuyPrice,\n      productQuantity,\n    } = updateProductDto;\n\n    product.productName = productName ? productName : product.productName;\n    product.productBrand = productBrand ? productBrand : product.productBrand;\n    product.productModel = productModel ? productModel : product.productModel;\n    product.description = description ? description : product.description;\n    product.productImage = productImage ? productImage : product.productImage;\n    product.productBuyPrice = ProductBuyPrice\n      ? ProductBuyPrice\n      : product.productBuyPrice;\n    product.productSalesPrice = productSalesPrice\n      ? productSalesPrice\n      : product.productSalesPrice;\n    product.productQuantity = productQuantity\n      ? productQuantity\n      : product.productQuantity;\n\n    try {\n      await product.save();\n      return product;\n    } catch (error) {\n      throw new InternalServerErrorException(\n        'Erro ao salvar os dados no banco de dados',\n      );\n    }\n  }\n\n  async deleteProduct(productId: string) {\n    const result = await this.productRepository.delete({ id: productId });\n\n    if (result.affected === 0) {\n      throw new NotFoundException(\n        'Não foi encontrado um produto com o ID informado',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReturnProductDto.html":{"url":"classes/ReturnProductDto.html","title":"class - ReturnProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReturnProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/return-products.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                product\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/dto/return-products.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                    \n                        \n                                Defined in src/product/dto/return-products.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from '../entities/product.entity';\n\nexport class ReturnProductDto {\n  product: Product;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReturnSalesDto.html":{"url":"classes/ReturnSalesDto.html","title":"class - ReturnSalesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReturnSalesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/dto/return-sales-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                sales\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/return-sales-dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sales\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sales\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/dto/return-sales-dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Sales } from '../entities/sales.entity';\n\nexport class ReturnSalesDto {\n  sales: Sales;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReturnUsersDto.html":{"url":"classes/ReturnUsersDto.html","title":"class - ReturnUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReturnUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/return-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/return-user-dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/return-user-dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Users } from '../entities/user.entity';\n\nexport class ReturnUsersDto {\n  users: Users;\n  message: string;\n}\n\nexport class arrayReturnUsersDto {\n  usersArray: Users[];\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sales.html":{"url":"classes/Sales.html","title":"class - Sales","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sales\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/entities/sales.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAd\n                            \n                            \n                                id\n                            \n                            \n                                nameCard\n                            \n                            \n                                numberCard\n                            \n                            \n                                orderNumber\n                            \n                            \n                                productQuantity\n                            \n                            \n                                products\n                            \n                            \n                                totalQuantity\n                            \n                            \n                                totalValueItem\n                            \n                            \n                                totalValueSale\n                            \n                            \n                                updatedAd\n                            \n                            \n                                user\n                            \n                            \n                                validationCode\n                            \n                            \n                                validationDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueSale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 20, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sales/entities/sales.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n  OneToOne,\n  ManyToMany,\n  OneToMany,\n} from 'typeorm';\nimport { Users } from 'src/users/entities/user.entity';\nimport { Product } from 'src/product/entities/product.entity';\n\n@Entity()\nexport class Sales extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  totalQuantity: number;\n\n  @Column('decimal', { precision: 20, scale: 2 })\n  totalValueSale: number;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  totalValueItem: number;\n\n  @Column()\n  productQuantity: number;\n\n  @CreateDateColumn()\n  createdAd: Date;\n\n  @UpdateDateColumn()\n  updatedAd: Date;\n\n  @Column()\n  numberCard: string;\n\n  @Column()\n  validationDate: string;\n\n  @Column()\n  nameCard: string;\n\n  @Column()\n  validationCode: number;\n\n  @Column()\n  orderNumber: number;\n\n  @ManyToOne(() => Users, (user) => user.sales, {\n    cascade: true,\n    eager: true,\n  })\n  user: Users;\n\n  @ManyToOne(() => Product, (product) => product.sales, {\n    cascade: true,\n    eager: true,\n  })\n  products: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SalesController.html":{"url":"controllers/SalesController.html","title":"controller - SalesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SalesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/sales.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sales\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSales\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSales(createSalesDto: CreateSalesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/sales/sales.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSalesDto\n                                    \n                                                CreateSalesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { SalesService } from './sales.service';\nimport { CreateSalesDto } from './dto/create-sales.dto';\nimport { ReturnSalesDto } from './dto/return-sales-dto';\n@Controller('sales')\nexport class SalesController {\n  constructor(private salesService: SalesService) {}\n\n  @Post()\n  async createSales(\n    @Body(ValidationPipe) createSalesDto: CreateSalesDto,\n  ): Promise {\n    const sales = await this.salesService.createSales(createSalesDto);\n    return {\n      sales,\n      message: 'Pedido cadastrado com sucesso',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SalesModule.html":{"url":"modules/SalesModule.html","title":"module - SalesModule","body":"\n                   \n\n\n\n\n    Modules\n    SalesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SalesModule\n\n\n\ncluster_SalesModule_providers\n\n\n\n\nSalesService\n\nSalesService\n\n\n\nSalesModule\n\nSalesModule\n\nSalesModule -->\n\nSalesService->SalesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sales/sales.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SalesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SalesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SalesService } from './sales.service';\nimport { SalesController } from './sales.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SalesRepository } from './sales.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([SalesRepository])],\n  providers: [SalesService],\n  controllers: [SalesController],\n})\nexport class SalesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SalesRepository.html":{"url":"classes/SalesRepository.html","title":"class - SalesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SalesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/sales.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FindSales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FindSales\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/sales/sales.repository.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSales\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSales(createSalesDto: CreateSalesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sales/sales.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSalesDto\n                                    \n                                                CreateSalesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Sales } from './entities/sales.entity';\nimport { CreateSalesDto } from './dto/create-sales.dto';\nimport {\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\n\n@EntityRepository(Sales)\nexport class SalesRepository extends Repository {\n  FindSales: any;\n\n  async createSales(createSalesDto: CreateSalesDto): Promise {\n    const {\n      productQuantity,\n      totalValueSale,\n      nameCard,\n      numberCard,\n      validationCode,\n      validationDate,\n      totalValueItem,\n      totalQuantity,\n      orderNumber,\n      userId,\n      productId,\n    } = createSalesDto;\n    const sales = this.create();\n    sales.productQuantity = productQuantity;\n    sales.totalValueItem = totalValueItem;\n    sales.totalValueSale = totalValueSale;\n    sales.totalQuantity = totalQuantity;\n    sales.orderNumber = orderNumber;\n    sales.nameCard = nameCard;\n    sales.numberCard = numberCard;\n    sales.validationCode = validationCode;\n    sales.validationDate = validationDate;\n    sales.user = userId;\n    sales.products = productId;\n\n    try {\n      await sales.save();\n      return sales;\n    } catch (error) {\n      console.log({ error });\n      if (error.code.toString() === '23505') {\n        throw new ConflictException('Venda Já cadastrado');\n      } else {\n        throw new InternalServerErrorException('Erro ao cadastrar Produto');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SalesService.html":{"url":"injectables/SalesService.html","title":"injectable - SalesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SalesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sales/sales.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(salesRepository: SalesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/sales/sales.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        salesRepository\n                                                  \n                                                        \n                                                                        SalesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSales\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSales(createSalesDto: CreateSalesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sales/sales.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSalesDto\n                                    \n                                                CreateSalesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SalesRepository } from './sales.repository';\nimport { ProductRepository } from 'src/product/product.repository';\nimport { CreateSalesDto } from './dto/create-sales.dto';\nimport { Sales } from './entities/sales.entity';\nimport { CreateProductDto } from 'src/product/dto/create-product.dto';\nimport { Product } from 'src/product/entities/product.entity';\n\n@Injectable()\nexport class SalesService {\n  constructor(\n    @InjectRepository(SalesRepository)\n    private salesRepository: SalesRepository,\n  ) {}\n\n  async createSales(createSalesDto: CreateSalesDto): Promise {\n    return this.salesRepository.createSales(createSalesDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FindUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FindUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/users/user.repository.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Users } from './entities/user.entity';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport {\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\n\n@EntityRepository(Users)\nexport class UserRepository extends Repository {\n  FindUsers: any;\n\n  async createUsers(createUserDto: CreateUserDto): Promise {\n    const { name } = createUserDto;\n    const users = this.create();\n    users.name = name;\n\n    try {\n      await users.save();\n      return users;\n    } catch (error) {\n      if (error.code.toString() === '23505') {\n        throw new ConflictException('Usuario Já cadastrado');\n      } else {\n        throw new InternalServerErrorException('Erro ao cadastrar Produto');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                sales\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sales\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sales[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  BaseEntity,\n} from 'typeorm';\nimport { Sales } from 'src/sales/entities/sales.entity';\n\n@Entity()\nexport class Users extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => Sales, (sales) => sales.user)\n  sales: Sales[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUsers\n                            \n                            \n                                    Async\n                                findAllUser\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  ValidationPipe,\n  Param,\n  Get,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ReturnUsersDto } from './dto/return-user-dto';\nimport { arrayReturnUsersDto } from './dto/return-user-dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async createUsers(\n    @Body(ValidationPipe) createUserDto: CreateUserDto,\n  ): Promise {\n    const users = await this.usersService.createUser(createUserDto);\n    return {\n      users,\n      message: 'Usuario cadastrado com sucesso',\n    };\n  }\n\n  @Get(':id')\n  async findOneUser(@Param('id') id): Promise {\n    const users = await this.usersService.findOneUser(id);\n    return {\n      users,\n      message: 'Usuario Localizado',\n    };\n  }\n\n  @Get()\n  async findAllUser(): Promise {\n    const usersArray = await this.usersService.findAllUser();\n    return {\n      usersArray,\n      message: 'Usuario Localizado',\n    };\n  }\n  /*\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  } */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserRepository } from './user.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserRepository])],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAllUser\n                            \n                            \n                                    Async\n                                findOneUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUsertDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUsertDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { Users } from './entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n  ) {}\n  async createUser(createUsertDto: CreateUserDto): Promise {\n    return this.userRepository.createUsers(createUsertDto);\n  }\n\n  async findOneUser(id: number): Promise {\n    const users = await this.userRepository.findOne(id, {\n      relations: ['sales'],\n      select: ['id', 'name', 'sales'],\n    });\n    if (!users) throw new NotFoundException('Pedido não encontrado');\n    return users;\n  }\n\n  async findAllUser(): Promise {\n    const users = await this.userRepository.find({\n      relations: ['sales'],\n      select: ['id', 'name', 'sales'],\n    });\n    if (!users) throw new NotFoundException('Bão há pedidos cadastrados');\n    return users;\n  }\n\n  /* findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  } */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/arrayReturnUsersDto.html":{"url":"classes/arrayReturnUsersDto.html","title":"class - arrayReturnUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  arrayReturnUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/return-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                usersArray\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/return-user-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users[]\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/return-user-dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Users } from '../entities/user.entity';\n\nexport class ReturnUsersDto {\n  users: Users;\n  message: string;\n}\n\nexport class arrayReturnUsersDto {\n  usersArray: Users[];\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configs/typeorm.configs.ts\n            \n            variable\n            TypeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/product/dto/return-products.dto.ts\n            \n            class\n            ReturnProductDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.repository.ts\n            \n            class\n            ProductRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/sales/dto/create-sales.dto.ts\n            \n            class\n            CreateSalesDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/sales/dto/return-sales-dto.ts\n            \n            class\n            ReturnSalesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sales/entities/sales.entity.ts\n            \n            class\n            Sales\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/sales/sales.controller.ts\n            \n            controller\n            SalesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sales/sales.repository.ts\n            \n            class\n            SalesRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sales/sales.service.ts\n            \n            injectable\n            SalesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/return-user-dto.ts\n            \n            class\n            arrayReturnUsersDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/return-user-dto.ts\n            \n            class\n            ReturnUsersDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            docker : ^1.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.38\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SalesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_SalesModule\n\n\n\ncluster_SalesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nSalesModule\n\nSalesModule\n\nAppModule -->\n\nSalesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nSalesService\n\nSalesService\n\nSalesModule -->\n\nSalesService->SalesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TypeOrmConfig   (src/.../typeorm.configs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configs/typeorm.configs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeOrmConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'pgecom',\n  password: 'pgpassword',\n  database: 'pgecom',\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  synchronize: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
